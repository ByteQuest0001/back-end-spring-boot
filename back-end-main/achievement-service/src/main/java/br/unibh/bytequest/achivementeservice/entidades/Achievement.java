package br.unibh.bytequest.achivementeservice.entidades;

import java.util.Objects;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

@DynamoDBTable(tableName = "achievement")
public class Achievement {

	private String id;
	private Long userId;
	private String name;
	private String description;
	private String dateCompleted;
	private String stack;
	private String category;
	private String situation;

	public Achievement() {
		super();
	}

	public Achievement(Long userId, String name, String description, String dateCompleted, String stack,
					   String category, String situation) {
		super();
		this.userId = userId;
		this.name = name;
		this.description = description;
		this.dateCompleted = dateCompleted;
		this.stack = stack;
		this.category = category;
	}

	public void update(){
		if(name != null){
			this.name = name;
		}

		if(description != null){
			this.description = description;
		}

		if(stack != null){
			this.stack = stack;
		}

		if(category != null){
			this.category = category;
		}

		if(situation != null){
			this.situation = situation;
		}

		if(dateCompleted != null){
			this.dateCompleted = dateCompleted;
		}

		if(situation == "CONCLUIDO"){
			this.dateCompleted = dateCompleted;
		}
	}

	public void complete(){
		this.situation = "CONCLUIDO";
		this.dateCompleted = "10/10/2020";
	}

	@DynamoDBAttribute
	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	@DynamoDBAttribute
	public String getDateCompleted() {
		return dateCompleted;
	}

	public void setDateCompleted(String dateCompleted) {
		this.dateCompleted = dateCompleted;
	}

	@DynamoDBAttribute
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@DynamoDBAttribute
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@DynamoDBAttribute
	public String getSituation() {
		return situation;
	}

	public void setSituation(String situation) {
		this.situation = situation;
	}

	@DynamoDBAttribute
	public String getStack() {
		return stack;
	}

	public void setStack(String stack) {
		this.stack = stack;
	}

	@DynamoDBAttribute
	public Long getUserId() {
		return userId;
	}

	public void setUserId(Long userId) {
		this.userId = userId;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;
		Achievement that = (Achievement) o;
		return Objects.equals(id, that.id) && Objects.equals(userId, that.userId);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, userId);
	}
}
